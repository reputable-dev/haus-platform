name: GitHub Copilot Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  copilot-analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      issues: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
        
    - name: Install dependencies
      run: bun install
      
    - name: TypeScript type check
      run: bunx tsc --noEmit
      
    - name: Enable Copilot suggestions
      run: |
        echo "âœ… Repository is configured for GitHub Copilot"
        echo "ðŸ“‹ Copilot instructions file: .github/copilot-instructions.md"
        echo "ðŸŽ¯ Project type: React Native/Expo with TypeScript"
        echo "ðŸ”§ Backend: Hono.js with tRPC"
        echo "ðŸ’¾ State: React Query + Zustand"
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `
          ## ðŸ¤– GitHub Copilot Integration Active
          
          This repository is fully configured for GitHub Copilot with:
          
          - âœ… **Custom Instructions**: Tailored for React Native/Expo + TypeScript
          - âœ… **Type Safety**: tRPC integration for end-to-end type safety
          - âœ… **Best Practices**: Mobile development patterns and conventions
          - âœ… **Architecture Guidance**: Hono.js backend, React Query + Zustand state management
          
          Copilot will now provide context-aware suggestions based on this project's specific architecture and conventions.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });